services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
        bind:
#            $twitterApiKey: '%env(EVENTS_API_KEY)%'
#            $twitterApiSecret: '%env(EVENTS_API_KEY)%'
#            $twitterBearerToken: '%env(EVENTS_API_KEY)%'
#            $twitterAccessToken: '%env(EVENTS_API_KEY)%'
#            $twitterAccessTokenSecret: '%env(EVENTS_API_KEY)%'
            $facebookPageId: '%env(FACEBOOK_PAGE_ID)%'
            $facebookAppId: '%env(FACEBOOK_APP_ID)%'
            $facebookAppSecret: '%env(FACEBOOK_APP_SECRET)%'
            $facebookUserAccessToken: '%env(FACEBOOK_USER_ACCESS_TOKEN)%'
            $instagramUserId: '%env(INSTAGRAM_USER_ID)%'
            $linkedinClientId: '%env(LINKEDIN_CLIENT_ID)%'
            $linkedinClientSecret: '%env(LINKEDIN_CLIENT_SECRET)%'
            $linkedinOrganizationId: '%env(LINKEDIN_ORGANIZATION_ID)%'
            $mediaFolder: '%kernel.project_dir%/var/SocialMediaContent'
            $postLimit: 100

    Muz\Pimcore\SoMLBundle\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/DTO/'

#    Muz\Pimcore\SoMLBundle\Provider\TwitterProvider:
#        tags: ['soml.provider']
#
    Muz\Pimcore\SoMLBundle\Provider\InstagramProvider:
        tags: ['soml.provider']
        
    Muz\Pimcore\SoMLBundle\Provider\FacebookProvider:
        tags: ['soml.provider']

#    Muz\Pimcore\SoMLBundle\Provider\LinkedinProvider:
#        tags: ['soml.provider']

    # Register scheduler task
    Muz\Pimcore\SoMLBundle\Scheduler\SocialMediaImportTaskProvider:
        tags:
            - { name: pimcore.maintenance.task, type: social_media_import }

    Muz\Pimcore\SoMLBundle\Service\SocialMediaService:
        arguments:
            $providers: !tagged_iterator soml.provider
